(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>i});var o=n(537),r=n.n(o),c=n(645),a=n.n(c)()(r());a.push([e.id,"body{\n    display: grid;\n    grid-template-rows: 1fr 4fr;\n}\n#content{\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n}\n\n#menu{\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    background-color: lightgray;\n}\n\n#display{\n    \n}\n\n.todo{\n    display: grid;\n    grid-template-columns: 1fr 6fr 4fr 4fr;\n    gap: 15px;\n}\n\n.doneTask{\n    color: red;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,2BAA2B;AAC/B;AACA;IACI,aAAa;IACb,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,2BAA2B;AAC/B;;AAEA;;AAEA;;AAEA;IACI,aAAa;IACb,sCAAsC;IACtC,SAAS;AACb;;AAEA;IACI,UAAU;AACd",sourcesContent:["body{\n    display: grid;\n    grid-template-rows: 1fr 4fr;\n}\n#content{\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n}\n\n#menu{\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    background-color: lightgray;\n}\n\n#display{\n    \n}\n\n.todo{\n    display: grid;\n    grid-template-columns: 1fr 6fr 4fr 4fr;\n    gap: 15px;\n}\n\n.doneTask{\n    color: red;\n}\n"],sourceRoot:""}]);const i=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,c){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(a[s]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);o&&a[l[0]]||(void 0!==c&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=c),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),c="/*# ".concat(r," */"),a=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(a).concat([c]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var c={},a=[],i=0;i<e.length;i++){var s=e[i],d=o.base?s[0]+o.base:s[0],l=c[d]||0,p="".concat(d," ").concat(l);c[d]=l+1;var u=n(p),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)t[u].references++,t[u].updater(m);else{var f=r(m,o);o.byIndex=i,t.splice(i,0,{identifier:p,updater:f,references:1})}a.push(p)}return a}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var c=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<c.length;a++){var i=n(c[a]);t[i].references--}for(var s=o(e,r),d=0;d<c.length;d++){var l=n(c[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}c=s}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var c=n.sourceMap;c&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(c))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var c=t[o]={id:o,exports:{}};return e[o](c,c.exports,n),c.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0;var o={};(()=>{n.d(o,{s:()=>I,U:()=>E});class e{constructor(e){this.name=e,this.toDoList=[]}addToDo(e){this.toDoList.push(e)}}class t{constructor(e,t="No Date Set",n=!1){this.name=e,this.date=t,this.complete=n}}const r=e=>{const t=document.createElement("div");return t.className="project",t.textContent=e.name,t.addEventListener("click",(()=>{E.activate(e),I.repopulateDisplay()})),t},c=(e,t)=>{const n=document.createElement("div");n.className="todo",n.setAttribute("id",t.toString());const o=document.createElement("input");o.setAttribute("type","checkbox"),1==e.complete&&(o.checked=!0,n.classList.add("doneTask")),o.addEventListener("click",(()=>{1==o.checked?(e.complete=!0,console.log(e.complete),n.classList.add("doneTask")):(e.complete=!1,console.log(e.complete),n.classList.remove("doneTask"))})),n.appendChild(o);const r=document.createElement("div");r.textContent=e.name,n.appendChild(r);const c=document.createElement("div");c.textContent=e.date,n.appendChild(c);const a=document.createElement("button");return a.textContent="Delete",a.onclick=()=>{E.active.toDoList.splice(n.id,1),I.repopulateDisplay()},n.appendChild(a),n};var a=n(379),i=n.n(a),s=n(795),d=n.n(s),l=n(569),p=n.n(l),u=n(565),m=n.n(u),f=n(216),h=n.n(f),v=n(589),A=n.n(v),C=n(426),y={};y.styleTagTransform=A(),y.setAttributes=m(),y.insert=p().bind(null,"head"),y.domAPI=d(),y.insertStyleElement=h(),i()(C.Z,y),C.Z&&C.Z.locals&&C.Z.locals;const g=document.querySelector("#content").querySelector("#menu"),b=document.querySelector("#display"),x=new e("General"),E=new class{constructor(e){this.projectList=[],this.general=e,this.active=e}addProject(e){this.projectList.push(e)}activate(e){this.active=e}get displayedProject(){return this.active}}(x),I={createProjectForm:()=>{g.removeChild(document.querySelector("#projectButton"));const t=(()=>{const t=document.createElement("div");t.className="projectForm";const n=document.createElement("fieldset");t.appendChild(n);const o=document.createElement("input");o.id="name",n.appendChild(o);const r=document.createElement("button");r.textContent="Submit",r.onclick=()=>{const t=new e(document.querySelector("#name").value);E.addProject(t),I.repopulateMenu()};const c=document.createElement("button");return c.textContent="Cancel",c.onclick=()=>{I.repopulateMenu()},n.appendChild(r),n.appendChild(c),t})();g.appendChild(t)},repopulateMenu:()=>{(()=>{const e=document.querySelector("#menu");for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(r(E.general));for(let t=0;t<E.projectList.length;t++)e.appendChild(r(E.projectList[t]))})(),g.appendChild(S())},repopulateDisplay:()=>{(e=>{const t=document.querySelector("#display");for(;t.firstChild;)t.removeChild(t.firstChild);const n=document.createElement("div");n.textContent=e.name,t.appendChild(n);for(let n=0;n<e.toDoList.length;n++)t.appendChild(c(e.toDoList[n],n))})(E.active),b.appendChild(k())},createTodoForm:()=>{b.removeChild(document.querySelector("#todoButton"));const e=(()=>{const e=document.createElement("div");e.className="todoForm";const n=document.createElement("fieldset");e.appendChild(n);const o=document.createElement("input");o.id="name",n.appendChild(o);const r=document.createElement("input");r.id="date",r.setAttribute("type","date"),n.appendChild(r);const c=document.createElement("button");c.textContent="Submit",c.onclick=()=>{const e=new t(document.querySelector("#name").value,document.querySelector("#date").value);E.active.addToDo(e),I.repopulateDisplay()};const a=document.createElement("button");return a.textContent="Cancel",a.onclick=()=>{I.repopulateDisplay()},e.appendChild(c),e.appendChild(a),e})();b.appendChild(e)}},S=()=>{const e=document.createElement("button");return e.id="projectButton",e.textContent="New Project",e.onclick=()=>I.createProjectForm(),e},k=()=>{const e=document.createElement("button");return e.id="todoButton",e.textContent="New Task",e.onclick=()=>I.createTodoForm(),e};I.repopulateMenu(),I.repopulateDisplay()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,